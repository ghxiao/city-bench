CONNECTION osm1: host=localhost port=5432 dbname=osm_vienna2 user=postgres password=ps

FILE f1: name=/Users/patrik/Desktop/OSM_Data/vienna4/bm1_restaurant.owl
FILE f2: name=/Users/patrik/Desktop/OSM_Data/vienna4/bm1_rel_hasCuisine.owl
FILE f3: name=/Users/patrik/Desktop/OSM_Data/vienna4/bm1_rel_intersect.owl

SCRIPT s1: /Users/patrik/ITS/city-bench/tools/spatialRelationsDatabaseReader.py
SCRIPT s2: /Users/patrik/ITS/city-bench/tools/transformOSMConcepts.py

mappingId A1
source osm1  SELECT osm_id, name, ST_AsEWKT(way) AS geo FROM planet_osm_point WHERE amenity = 'restaurant' AND name IS NOT NULL AND osm_id > 0
target f1  :{1} rdf:type tuwt:Restaurant, owl:NamedIndividual;
           gml:featurename "{2}"^^xsd:string;
	   geo:point "{3}"^^xsd:string .

mappingId A2
source osm1 SELECT osm_id, name AS geo FROM planet_osm_point WHERE amenity = 'restaurant' AND name IS NOT NULL AND osm_id > 0
transform s2 "restaurant_role" "2"
target f2  :{1} tuwt:hasCuisine :{2} .

mappingId A3
source s1 "osm1" "intersects" "planet_osm_polygon" "planet_osm_polygon" "(t1.landuse IS NOT NULL or t1.leisure IS NOT NULL)" "(t2.landuse IS NOT NULL or t2.leisure IS NOT NULL)"
target f3 :{1} tuwt:isLocatedIntersect :{2} .

